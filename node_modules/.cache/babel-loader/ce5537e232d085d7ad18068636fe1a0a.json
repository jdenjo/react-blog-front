{"ast":null,"code":"import _classCallCheck from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jdenjo/Documents/react-rails-blog/react-blog/src/components/PostShowPage.js\";\nimport React, { Component } from 'react';\nimport { Post } from './requests';\nimport PostDetails from './PostDetails';\nexport var PostShowPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostShowPage, _Component);\n\n  function PostShowPage(props) {\n    var _this;\n\n    _classCallCheck(this, PostShowPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostShowPage).call(this, props));\n    _this.state = {\n      post: null,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(PostShowPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Post.one(this.props.match.params.id).then(function (post) {\n        _this2.setState({\n          post: post,\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //deconstruct the post from the state\n      var post = this.state.post;\n\n      if (!this.state.isLoading && this.state.post) {\n        console.log(\"got passed the null\");\n        return React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(PostDetails, Object.assign({}, post, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this3.deleteQuestion();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Delete Question\"), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Update question\"));\n      }\n\n      if (this.state.isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Loading ..\");\n      }\n    }\n  }, {\n    key: \"deleteQuestion\",\n    value: function deleteQuestion(params) {\n      var _this4 = this;\n\n      var post = this.state.post;\n      Post.destroy(post.id).then(function (post) {\n        _this4.setState({\n          post: null\n        });\n      }); // redirect to the index page after deleting\n\n      this.props.history.push(\"/posts\");\n    }\n  }]);\n\n  return PostShowPage;\n}(Component);\nexport default PostShowPage;","map":{"version":3,"sources":["/home/jdenjo/Documents/react-rails-blog/react-blog/src/components/PostShowPage.js"],"names":["React","Component","Post","PostDetails","PostShowPage","props","state","post","isLoading","one","match","params","id","then","setState","console","log","deleteQuestion","destroy","history","push"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAEC,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFiB;AAMlB;;AARF;AAAA;AAAA,wCAUqB;AAAA;;AAGlBN,MAAAA,IAAI,CAACO,GAAL,CAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC,EAAqCC,IAArC,CAA0C,UAACN,IAAD,EAAU;AAClD,QAAA,MAAI,CAACO,QAAL,CAAc;AACZP,UAAAA,IAAI,EAAEA,IADM;AAEZC,UAAAA,SAAS,EAAE;AAFC,SAAd;AAID,OALD;AAMD;AAnBF;AAAA;AAAA,6BAqBU;AAAA;;AAEP;AAFO,UAGCD,IAHD,GAGU,KAAKD,KAHf,CAGCC,IAHD;;AAKP,UAAI,CAAC,KAAKD,KAAL,CAAWE,SAAZ,IAAyB,KAAKF,KAAL,CAAWC,IAAxC,EAA8C;AAC5CQ,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,oBAAC,WAAD,oBAAiBT,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACU,cAAL,EAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPF,CADF;AAcD;;AACD,UAAI,KAAKX,KAAL,CAAWE,SAAf,EAA0B;AACxB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;AAEF;AA/CF;AAAA;AAAA,mCAiDgBG,MAjDhB,EAiDwB;AAAA;;AAAA,UACbJ,IADa,GACJ,KAAKD,KADD,CACbC,IADa;AAGrBL,MAAAA,IAAI,CAACgB,OAAL,CAAaX,IAAI,CAACK,EAAlB,EAAsBC,IAAtB,CAA2B,UAACN,IAAD,EAAU;AACnC,QAAA,MAAI,CAACO,QAAL,CAAc;AACZP,UAAAA,IAAI,EAAE;AADM,SAAd;AAGD,OAJD,EAHqB,CASrB;;AACA,WAAKF,KAAL,CAAWc,OAAX,CAAmBC,IAAnB;AAED;AA7DF;;AAAA;AAAA,EAAkCnB,SAAlC;AA+DA,eAAeG,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Post } from './requests';\nimport PostDetails from './PostDetails';\n\n\nexport class PostShowPage extends Component {\n\n constructor(props) {\n   super(props)\n   this.state = {\n     post: null,\n     isLoading: true,\n   };\n }\n\n componentDidMount() {\n\n\n   Post.one(this.props.match.params.id).then((post) => {\n     this.setState({\n       post: post,\n       isLoading: false,\n     });\n   });\n }\n\n render() {\n\n   //deconstruct the post from the state\n   const { post } = this.state;\n\n   if (!this.state.isLoading && this.state.post) {\n     console.log(\"got passed the null\");\n     return (\n       <main>\n         {/* This will use a component and copied object post from state as prop to display */}\n         <PostDetails {...post} />\n         <button onClick={() => this.deleteQuestion()}>\n           Delete Question\n        </button>\n\n         <button>\n           Update question\n        </button>\n\n       </main>\n     )\n   }\n   if (this.state.isLoading) {\n     return <div>Loading ..</div>\n   }\n\n }\n\n deleteQuestion(params) {\n   const { post } = this.state;\n\n   Post.destroy(post.id).then((post) => {\n     this.setState({\n       post: null,\n     });\n   });\n\n   // redirect to the index page after deleting\n   this.props.history.push(`/posts`);\n\n }\n}\nexport default PostShowPage\n"]},"metadata":{},"sourceType":"module"}