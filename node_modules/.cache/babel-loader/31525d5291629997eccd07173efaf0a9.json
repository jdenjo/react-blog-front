{"ast":null,"code":"import _classCallCheck from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jdenjo/Documents/react-rails-blog/react-blog/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jdenjo/Documents/react-rails-blog/react-blog/src/components/PostEditPage.js\";\nimport React, { Component } from \"react\";\nimport PostForm from \"./PostForm\";\nimport { Post } from \"./requests\";\n\nvar PostEditPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostEditPage, _Component);\n\n  function PostEditPage(props) {\n    var _this;\n\n    _classCallCheck(this, PostEditPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostEditPage).call(this, props));\n    _this.state = {\n      errors: [],\n      loading: true,\n      question: null\n    };\n    _this.updatePost = _this.updatePost.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PostEditPage, [{\n    key: \"loadPost\",\n    value: function loadPost() {\n      var _this2 = this;\n\n      Post.one(this.props.match.params.id).then(function (post) {\n        _this2.setState({\n          post: post,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"updatePost\",\n    value: function updatePost(params) {\n      var _this3 = this;\n\n      var post = this.state.post;\n      Post.update(post.id, params).then(function (data) {\n        if (data.errors) {\n          _this3.setState({\n            errors: data.errors\n          });\n        } else {\n          _this3.props.history.push(\"/posts/\".concat(post.id));\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadPost();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          errors = _this$state.errors,\n          loading = _this$state.loading,\n          post = _this$state.post;\n\n      if (loading) {\n        return React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Loading...\"));\n      }\n\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Edit Post\"), React.createElement(PostForm, {\n        data: post,\n        errors: errors,\n        onSubmit: this.updatePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PostEditPage;\n}(Component);\n\nexport default PostEditPage;","map":{"version":3,"sources":["/home/jdenjo/Documents/react-rails-blog/react-blog/src/components/PostEditPage.js"],"names":["React","Component","PostForm","Post","PostEditPage","props","state","errors","loading","question","updatePost","bind","one","match","params","id","then","post","setState","update","data","history","push","loadPost"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,YAArB;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAMA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AATiB;AAUlB;;;;+BAEU;AAAA;;AACTR,MAAAA,IAAI,CAACS,GAAL,CAAS,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjC,EAAqCC,IAArC,CAA0C,UAAAC,IAAI,EAAI;AAChD,QAAA,MAAI,CAACC,QAAL,CAAc;AACZD,UAAAA,IAAI,EAAEA,IADM;AAEZT,UAAAA,OAAO,EAAE;AAFG,SAAd;AAID,OALD;AAMD;;;+BAEUM,M,EAAQ;AAAA;;AAAA,UACTG,IADS,GACA,KAAKX,KADL,CACTW,IADS;AAGjBd,MAAAA,IAAI,CAACgB,MAAL,CAAYF,IAAI,CAACF,EAAjB,EAAqBD,MAArB,EAA6BE,IAA7B,CAAkC,UAAAI,IAAI,EAAI;AACxC,YAAIA,IAAI,CAACb,MAAT,EAAiB;AACf,UAAA,MAAI,CAACW,QAAL,CAAc;AAAEX,YAAAA,MAAM,EAAEa,IAAI,CAACb;AAAf,WAAd;AACD,SAFD,MAEO;AACL,UAAA,MAAI,CAACF,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,kBAAkCL,IAAI,CAACF,EAAvC;AACD;AACF,OAND;AAOD;;;wCAEmB;AAClB,WAAKQ,QAAL;AACD;;;6BAEQ;AAAA,wBAC2B,KAAKjB,KADhC;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,OADT,eACSA,OADT;AAAA,UACkBS,IADlB,eACkBA,IADlB;;AAGP,UAAIT,OAAJ,EAAa;AACX,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF;AAKD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAES,IADR;AAEE,QAAA,MAAM,EAAEV,MAFV;AAGE,QAAA,QAAQ,EAAE,KAAKG,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAUD;;;;EA3DwBT,S;;AA8D3B,eAAeG,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PostForm from \"./PostForm\";\nimport { Post } from \"./requests\";\n\nclass PostEditPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errors: [],\n      loading: true,\n      question: null\n    };\n\n    this.updatePost = this.updatePost.bind(this);\n  }\n\n  loadPost() {\n    Post.one(this.props.match.params.id).then(post => {\n      this.setState({\n        post: post,\n        loading: false\n      });\n    });\n  }\n\n  updatePost(params) {\n    const { post } = this.state;\n\n    Post.update(post.id, params).then(data => {\n      if (data.errors) {\n        this.setState({ errors: data.errors });\n      } else {\n        this.props.history.push(`/posts/${post.id}`);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.loadPost();\n  }\n\n  render() {\n    const { errors, loading, post } = this.state;\n\n    if (loading) {\n      return (\n        <main>\n          <h2>Loading...</h2>\n        </main>\n      );\n    }\n\n    return (\n      <main>\n        <h1>Edit Post</h1>\n        <PostForm\n          data={post}\n          errors={errors}\n          onSubmit={this.updatePost}\n        />\n      </main>\n    );\n  }\n}\n\nexport default PostEditPage;\n"]},"metadata":{},"sourceType":"module"}