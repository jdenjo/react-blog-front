{"ast":null,"code":"var _jsxFileName = \"/home/jdenjo/Documents/react-rails-blog/react-blog/src/components/FormErrors.js\";\nimport React from \"react\";\nimport \"../styles/FormErrors.css\";\n\nvar FormErrors = function FormErrors(props) {\n  var forField = props.forField,\n      _props$errors = props.errors,\n      errors = _props$errors === void 0 ? [] : _props$errors; // <FormErrors forField=\"title\" errors={errors} />\n\n  var filteredErrors = errors;\n\n  if (forField) {\n    filteredErrors = errors.filter(function (e) {\n      return e.field.toLowerCase() === forField.toLowerCase();\n    });\n  }\n\n  if (filteredErrors.length < 1) {\n    return null;\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"FormErrors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, filteredErrors.map(function (error, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, error.message);\n  }));\n};\n\nexport default FormErrors;","map":{"version":3,"sources":["/home/jdenjo/Documents/react-rails-blog/react-blog/src/components/FormErrors.js"],"names":["React","FormErrors","props","forField","errors","filteredErrors","filter","e","field","toLowerCase","length","map","error","i","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAAA,MAClBC,QADkB,GACQD,KADR,CAClBC,QADkB;AAAA,sBACQD,KADR,CACRE,MADQ;AAAA,MACRA,MADQ,8BACC,EADD,kBAE1B;;AAEA,MAAIC,cAAc,GAAGD,MAArB;;AACA,MAAID,QAAJ,EAAc;AACZE,IAAAA,cAAc,GAAGD,MAAM,CAACE,MAAP,CACf,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,KAAF,CAAQC,WAAR,OAA0BN,QAAQ,CAACM,WAAT,EAA9B;AAAA,KADc,CAAjB;AAGD;;AAED,MAAIJ,cAAc,CAACK,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,WAAO,IAAP;AACD;;AAED,SACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,cAAc,CAACM,GAAf,CAAmB,UAACC,KAAD,EAAQC,CAAR;AAAA,WAClB;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaD,KAAK,CAACE,OAAnB,CADkB;AAAA,GAAnB,CADH,CADF;AAOD,CAtBD;;AAwBA,eAAeb,UAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/FormErrors.css\";\n\nconst FormErrors = props => {\n  const { forField, errors = [] } = props;\n  // <FormErrors forField=\"title\" errors={errors} />\n\n  let filteredErrors = errors;\n  if (forField) {\n    filteredErrors = errors.filter(\n      e => e.field.toLowerCase() === forField.toLowerCase()\n    );\n  }\n\n  if (filteredErrors.length < 1) {\n    return null;\n  }\n\n  return (\n    <ul className=\"FormErrors\">\n      {filteredErrors.map((error, i) => (\n        <li key={i}>{error.message}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default FormErrors;\n"]},"metadata":{},"sourceType":"module"}